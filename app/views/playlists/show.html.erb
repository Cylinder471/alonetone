<%= content_for :head do %>
  <% if @playlist.cover_image_present? %>
    <%= tag(:link, rel: 'preload', href: playlist_cover_url(@playlist, variant: :greenfield), as: 'image')%>
  <% end %>
<% end %>

<div class="page_container" id="playlist_and_track_content_header">
  <%= render partial: 'shared/back_to_artist' %>
</div>
<div class="page_container" id="playlist_and_track_content">
  <%= render 'playlist' %>

  <% if @asset %>
    <%= render partial: 'shared/asset' %>
  <% else %>
    <%= content_for(:body_class, 'cover_view') %>
    <div class="track_content">
      <div class="large_cover_and_credits">
        <div class="large_cover">
          <%= playlist_cover(@playlist, variant: :playlist_cover) %>
        </div>
        <% if @playlist.has_any_links? %>
        <div class="playlist_options">
          <%= render partial: 'links' %>
        </div>
        <% end %>
      </div>
      <% if defined?(@old_cover_alert) and authorized?  %>
        <div class="playlist_cover_alert">
          Hey, <%= current_user.name %> this cover is from <strong><%= @playlist.pic.created_at.year %></strong> and is very blurry since we only saved a
          small 200x200px version of it.
          Go <%= link_to 'Upload a higher res one', edit_user_playlist_path(@playlist.user, @playlist),
            class: 'edit_playlist', :title => 'edit this playlist' %> if you can!</a>
        </div>
      <% end %>
      <% if @playlist.credits.present? %>
        <div class="playlist_credits">
        <%= markdown(@playlist.credits) %>
      </div>
      <% end %>
    </div>
  <% end %>
</div>

<script>

  const playlistCredits = document.getElementsByClassName("playlist_credits")[0]
  const playlistSidebar = document.getElementsByClassName("playlist_sidebar")[0]
  const trackContent = document.getElementsByClassName("track_content")[0]
  const playlistAndTrackContent = document.getElementById("playlist_and_track_content")

  const mainElement = document.getElementsByTagName("main")[0]
  
  const mainPaddingBottom = parseInt( window.getComputedStyle(mainElement).getPropertyValue('padding-bottom'), 10 )

  const viewportResized = function () {

    let heightDifference = playlistSidebar.clientHeight - trackContent.clientHeight
    let offset = playlistCredits.clientHeight - heightDifference - mainPaddingBottom
    
    if ( window.getComputedStyle(playlistCredits).getPropertyValue('position') == "absolute") {
      playlistAndTrackContent.setAttribute("style","padding-bottom:" + offset + "px")
      playlistCredits.setAttribute("style", "width:" + trackContent.clientWidth + "px")
    } else {
      playlistAndTrackContent.setAttribute("style","padding-bottom: 0px")
      playlistCredits.setAttribute("style", "width: 100%")
    }

    if ( heightDifference > 0 ) {
      playlistSidebar.setAttribute("style","border-bottom-right-radius: 6px")
    } else {
      playlistSidebar.setAttribute("style","border-bottom-right-radius: 0px")
    }
  }

  viewportResized()

  window.addEventListener('resize', function () {
    viewportResized()
  }, false)

</script>
